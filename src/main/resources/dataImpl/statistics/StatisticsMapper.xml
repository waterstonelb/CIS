<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cinema.data.statistics.StatisticsMapper">
    <select id="selectMovieScheduleTimes" resultType="com.example.cinema.po.MovieScheduleTime">
        select movie_id as movieId, count(*) as time,name from
              (select * from schedule where start_time between #{date} and #{nextDate}) s,
              movie where s.movie_id = movie.id  and name is not NULL
              group by movieId
    </select>

    <select id="selectMovieTotalBoxOffice" resultType="com.example.cinema.po.MovieTotalBoxOffice">
        select movie.id as movieId, boxOffice,name from movie
        left join
          (select movie_id as movieId,sum(fare) as boxOffice from schedule
          right join
          (select schedule_id from ticket where state = 3) t
          on schedule.id = t.schedule_id group by movie_id) s
        on s.movieId = movie.id
        where name is not NULL
        order by boxOffice desc
    </select>

    <select id="selectAudiencePrice" resultType="com.example.cinema.po.AudiencePrice">
        select user_id as userId, sum(fare) as totalPrice from schedule right join
              (select * from ticket where schedule_id in
              (select id from schedule where start_time between #{date} and #{nextDate}) and state = 3) t
        on schedule.id = schedule_id group by user_id
    </select>

    <select id="selectPopularMovies" resultType="com.example.cinema.po.PopularMovies">
        select movie.id as movieId, boxOffice,name from movie
        left join
          (select movie_id as movieId,sum(fare) as boxOffice from schedule
          right join
          (select schedule_id from ticket where state = 3 and time between #{nextDate} and #{date}) t
          on schedule.id = t.schedule_id group by movie_id) s
        on s.movieId = movie.id
        where name is not NULL
        order by boxOffice desc
        limit #{movieNum}
    </select>
    <select id="selectPlacingRate" resultType="com.example.cinema.po.PlacingRate">
        select name as name,seatnum as placingrate from
        (select * from
          (select movie_id,(sum(audienceNum)/sum(seatSum)) as seatnum from 
            (select * from
              (select schedule_id,count(*) as audienceNum from ticket where state = 3 and time between #{date} and #{nextdate} group by schedule_id)p
              left join
              (select id,hall_id,movie_id from schedule)q
              on p.schedule_id = q.id)r
          right join
          (select id as hall_id,hall_row*hall_column as seatSum from hall)u
          on u.hall_id=r.hall_id group by movie_id)b
          left join
          (select id,name from movie)s
          on b.movie_id=s.id)c where c.name is not NULL and c.seatnum is not NULL
    </select>


    <select id="SelectBuyRecord" resultType="com.example.cinema.po.UserBuyRecord">
        select real_pay as realPrice,time,name from
        ((select * from ticket where ticket.user_id = #{id} and (state = 3 or state = 1))u
                left join
                (select name,schedule_ids from movie
                left join 
                (select id as schedule_ids,movie_id from schedule)s
                on movie.id = s.movie_id)t
             on u.schedule_id = t.schedule_ids)

    </select>

    <select id="SelectChargeRecord" resultType="com.example.cinema.po.UserChargeRecord">
        select charge_time as time,charge as chargeNum,user_id as userId from user_charge where user_id=#{id}
    </select>

    <select id="AdminSelectChargeRecord" resultType="com.example.cinema.po.AdminChargeRecord">
        select nid as userId,sum(charge) as chargeNum from
            (select user_id as nid,charge from user_charge where charge_time between #{date} and #{nextdate})t
            right join 
                (select * from VIP_card)x
                on x.user_id = t.nid
        where nid is not NULL
        group by user_id 
        order by chargeNum desc
    </select>

    <select id="AdminSelectBuyRecord" resultType="com.example.cinema.po.AdminUserBuyRecord">
        select sum(real_pay) as realPrice,uid as userId from
        (select * from
            (select user_id as uid from vip_card)h,
                (select * from
                    (select * from ticket where time between #{date} and #{nextdate})u
                    left join
                    (select name,schedule_ids from movie
                    left join 
                    (select id as schedule_ids,movie_id from schedule)s
                    on movie.id = s.movie_id)t
                on u.schedule_id = t.schedule_ids)l
            where h.uid = l.user_id)x
        where real_pay is not NULL and user_id is not NULL
        group by uid
        order by realPrice desc

    </select>


</mapper>